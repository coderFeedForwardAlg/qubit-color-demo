

version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: p
      POSTGRES_DB: data
    ports:
      - "1111:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d data"]
      interval: 5s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
        /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin || exit 1;
        /usr/bin/mc mb myminio/bucket || true;
        /usr/bin/mc anonymous set public myminio/bucket || exit 1;
        echo 'Bucket creation completed successfully';
      exit 0;
      "

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      DATABASE_URL: "postgres://dbuser:p@db:5432/data"
      DATABASE_CONNECT_TIMEOUT: "30"
      SQLX_OFFLINE: "true"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8082/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
  minio_data:


